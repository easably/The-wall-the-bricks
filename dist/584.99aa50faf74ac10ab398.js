"use strict";(self.webpackChunkthe_wall=self.webpackChunkthe_wall||[]).push([[584],{5584:(m,r,i)=>{i.r(r),i.d(r,{SpeechRecognitionWeb:()=>c,SpeechRecognition:()=>d});var g=i(8384);class c extends g.Uw{constructor(){super({name:"SpeechRecognition",platforms:["web"]}),!this.speechRecognizer&&window&&window.webkitSpeechRecognition&&(this.speechRecognizer=new window.webkitSpeechRecognition)}available(){return new Promise((s,e)=>{this.speechRecognizer?s({available:void 0!==this.speechRecognizer}):e("This feature is not supported.")})}start(s){return new Promise((e,h)=>{this.speechRecognizer.start();var u=[];const{language:p,maxResults:a}=s,o=a||5;this.speechRecognizer.maxAlternatives=o,this.speechRecognizer?(p&&(this.speechRecognizer.lang=p),this.speechRecognizer.onend=()=>{console.log("return final result"),e({matches:u})},this.speechRecognizer.onerror=h,this.speechRecognizer.onresult=t=>{const l=t.results[0].length>o?o:t.results[0].length;console.log(l);for(var n=0;n<l;++n)console.log(t.results[0][n]),u.push(t.results[0][n].transcript)}):h({mathes:void 0})})}stop(){return new Promise((s,e)=>{this.speechRecognizer?(this.speechRecognizer.stop(),s()):e("This feature is not supported.")})}getSupportedLanguages(){throw this.unimplemented("Method not implemented on web.")}hasPermission(){return new Promise((s,e)=>{this.speechRecognizer?navigator.getUserMedia({audio:!0},()=>{s({permission:!0})},()=>{e({permission:!1})}):e("This feature is not supported.")})}requestPermission(){throw this.unimplemented("Method not implemented on web.")}}const d=new c}}]);